rem ============================================================================
rem v: the number of verbs
rem w: the number of nouns (objects)
rem g: the number of "gettable" objects?????
rem NB: if these change value, the DIMmed arrays in @initialise will also need 
rem     to be changed
rem ============================================================================

poke 53280, 11
poke 53281, 0
print "{LIGHT_GREEN}"

let v! = 25
let w! = 36
let g! = 18

dim c![36]   ;w
dim f![36]   ;w

f![18] = 1
f![17] = 1
f![2] = 1
f![26] = 1
f![28] = 1
f![23] = 1

let ll! = 60  rem turns remaining on torch
let rm! = 57  rem start location
let m$ = "ok"

let charpos! = 0
let index! = 0
dim buffer![2]
x$ = @buffer!


rem usercmd$ hold the command types in by the player
dim usercmdbuff![64]
usercmd$ = @usercmdbuff!

rem parser working variables
dim pverbbuff![64]
pverb$ = @pverbbuff!
dim pnounbuff![64]
pnoun$ = @pnounbuff!
let vb! = 0
let ob! = 0

rem Off to read data in and initialise and populate arrays
gosub initialise

gameloop:

  print "{CLEAR}"
  print "haunted house"
  print "----------------------------------------"
  print ""

  rem Print location
  print "your location"
  print descriptions$[rm!]
  print ""

  rem Print exits
  print "exits:";

  charpos! = strlen!(roomexits$[rm!])
  index! = 0

  if charpos! > 0 then

    while index! < charpos!
      strncpy x$, roomexits$[rm!] + index!, 1
      print x$;
      index! = index! + 1
      if charpos! - index! > 0 then  
        print ",";
      endif
    endwhile

  endif

  print ""

  rem  Print visible objects
  index! = 0

  for index! = 0 to (g! - 1)
    if l![index!] = rm! and f![index!] = 0 then 
      print "you can see ";
      print object$[index!];
      print " here"
    endif
  next index!

  print ""
  print m$
  
  m$ = "what"

rem The parser
rem Get user input
  print "what will you do now? ";
  input usercmd$, 63, "abcdefghijklmnopqrstuvwxzy? "
  print ""
  print usercmd$

  rem ==========================================================================
  rem     Clear the working variables
  rem     v$: the verb string
  rem     w$: the noun string
  rem     vb: the index into the verb array - v$(i)
  rem     ob: the index into the noun array - o$(i)
  rem     
  rem     Our aim is to find 2 words separated by a space. The 1st is the verb,
  rem     the 2nd (if present) is the noun (object).
  rem ==========================================================================

  pverb$ = ""
  pnoun$ = ""
  rem vb = 0
  rem ob = 0

  rem index through uservmd$ 1 character at a time...
  charpos! = strlen!(usercmd$)
  index! = 0

  if charpos! > 0 then
   
    while index! < charpos!
      strncpy x$, usercmd$ + index!, 1
      print x$
      index! = index! + 1
      rem if charpos! - index! > 0 then  
      rem   print ",";
      rem endif
    endwhile

  endif

  print ""


  rem 250 for i = 1 to len(q$)
  rem !- If we find a space, we store the prior charactersd as the verb, if we don't
  rem !- already have one...
  rem 260 if midescriptions$(q$, i, 1) = " " and v$ = "" then v$ = left$(q$, i - 1)
  rem !- Otherwise check the next character in q$. If it is not a space and we have
  rem !- the verb (ie: v$ is not empty), then deem the remaining segment of q$
  rem !- as the noun (object). Bail from the for...next
  rem 270 ifmidescriptions$(q$,i+1,1)<>" "andv$<>""thenw$=midescriptions$(q$,i+1, len(q$) - 1):i = len(q$)
  rem 280 next i
  rem !- If there is no noun, then assume the user only gave a verb.
  rem 290 if w$ = "" then v$ = q$
  rem !- Determine which verb we have...
  rem 300 for i = 1 to v
  rem 310 if v$ = v$(i) then vb = i
  rem 320 next i
  rem !- Determine which noun we have.
  rem 330 for i = 1 to w
  rem 340 if w$ = o$(i) then ob = i
  rem 350 next i
  rem !- The noun is not recongnised...
  rem 360 if w$ > " " and ob = 0 then m$ = "THAT'S SILLY!"
  rem !- The verb is not recognised, so set the verb to "HELP".
  rem 370 if vb = 0 then vb = v + 1
  rem !- Error messages for bad input.
  rem 380 if w$ = "" then m$ = "I NEED TWO WORDS."
  rem !- Invalid verb with valid object...
  rem 390 if vb > v and ob > 0 then m$ = "YOU CAN'T '" + q$ + "'"
  rem !- Invalid verb and invalid object...
  rem 400 if vb > v and ob = 0 then m$ = "YOU DON'T MAKE SENSE"
  rem !- Valid verb and valid object, but you don't have the object...
  rem 410 if vb < v and ob > 0 AND c(ob) = 0 then m$ = "YOU DON'T HAVE '" + w$ + "'"


rem #region "Events and Environment Status Control"
rem 415 if f(26) <> 1 or rm <> 13 or vb <> 21 then goto 430
rem 420 if (int(rnd(1) * 3) + 1) <>3 then m$ = "BAT'S ATTACKING!":goto 90
rem 430 if rm = 44 and (int(rnd(1) * 2) + 1) = 1 and f(24) <> 1 then f(27) = 1
rem 440 if f(0) = 1 then ll = ll - 1
rem 450 if ll < 1 then f(0) = 0
rem #endregion
rem 
rem !- Branch to verb handlers...
rem 459 if vb > 15 then 465
rem 460 on vb gosub 500,570,640,640,640,640,640,640,640,980,980,1030,1070,1140,1180
rem 462 goto 470
rem 465 on vb - 15 gosub 1220,1250,1300,1340,1380,1400,1430,1460,1490,1510,1590
rem 
rem !- Handle the candle as turns pass...
rem 470 if ll = 10 then m$ = "YOUR CANDLE IS WANING!"
rem 480 if ll = 1 then m$ = "YOU CANDLE IS OUT!"
rem 490 goto 90
rem 
rem #region "VERBS"
rem !- HELP
rem 500 ? "WORDS I KNOW:"
rem 510 for i = 1 to v
rem 520 ? v$(i);","
rem 530 next i
rem 540 m$ = "":?
rem 550 gosub 1580
rem 560 return
rem 
rem !- CARRYING?
rem 570 ? "YOU ARE CARRYING:"
rem 580 for i = 1 to g
rem 590 if c(i) = 1 then ? o$(i);",";
rem 600 next i
rem 610 m$ = "":?
rem 620 gosub 1580
rem 630 return
rem 
rem !- GO,N,S,W,E,U,D
rem 640 d = 0
rem 650 if ob = 0 then d = vb - 3
rem 660 if ob = 19 then d = 1
rem 670 if ob = 20 then d = 2
rem 680 if ob = 21 then d = 3
rem 690 if ob = 22 then d = 4
rem 700 if ob = 23 then d = 5
rem 710 if ob = 24 then d = 6
rem 720 if rm = 20 then d = 5 then d = 1
rem 730 if rm = 20 then d = 6 then d = 3
rem 740 if rm = 22 then d = 6 then d = 2
rem 750 if rm = 22 then d = 5 then d = 3
rem 760 if rm = 36 then d = 6 then d = 1
rem 770 if rm = 36 then d = 5 then d = 2
rem 780 if f(14) = 1 then m$ = "CRASH! YOU FELL OUT OF THE TREE!":f(14) = 0:return
rem 790 if f(27) = 1 and rm = 52 then m$ = "GHOSTS WILL NOT LET YOU MOVE":return
rem 800 if rm=45 aN c(1)=1 aN f(34)=0 tH m$="A MAGICAL BARRIER TO THE WEST":return
rem 810 if (rm=26 and f(0)=0) and (d=1 or d=4) then m$ = "YOU NEED A LIGHT":return
rem 820 if rm = 54 and c(15) <> 1 then m$ = "YOU'RE STUCK!":return
rem 830 ifc(15)=1aN nO(rm>52orrm<56orrm=47)tHm$="YOU CAN'T CARRY A BOAT!":return
rem 840 if (rm>26 and rm<30) and f(0)=0 then m$="TOO DARK TO MOVE":return
rem 850 f(35)=0:rl=len(r$(rm))
rem 860 for i = 1 to rl
rem 870 u$ = midescriptions$(r$(rm), i, 1)
rem 880 if (u$ ="N" and d=1 and f(35)=0) then rm = rm - 8:f(35) = 1
rem 890 if (u$ ="S" and d=2 and f(35)=0) then rm = rm + 8:f(35) = 1
rem 900 if (u$ ="W" and d=3 and f(35)=0) then rm = rm - 1:f(35) = 1
rem 910 if (u$ ="e" and d=4 and f(35)=0) then rm = rm + 1:f(35) = 1
rem 920 next i
rem 930 m$ = "OK"
rem 940 if f(35)=0 then m$="YOU CAN'T GO THAT WAY!"
rem 950 if d<1 then m$= "GO WHERE?"
rem 960 if rm=41 and f(23)=1 then r$(49)="SW":m$="THE DOOE SLAMS SHUT!":f(23)=0
rem 970 return
rem 
rem 
rem 
rem !- GET,TAKE
rem 980 if ob>g then m$ = "I CAN'T GET " + w$:return
rem 990 if l(ob) <> rm then m$ = "IT ISN'T HERE"
rem 1000 if c(ob) = 2 then m$ = "YOU ALREADY HAVE IT"
rem 1010 ifob>0andl(ob)=rm and f(ob)=0 then c(ob)=1:l(ob)=65:m$="YOU HAVE THE "+w$
rem 1020 return
rem 
rem !- OPEN
rem 1030 if rm=43 and (ob=28 or ob=29) then f(17)=0:m$="DRAWER OPEN"
rem 1040 if rm=28 and ob=25 then m$="IT'S LOCKED"
rem 1050 if rm=38 and ob=32 then m$="THAT'S CREEPY!":f(2)=0
rem 1060 return
rem 
rem 
rem !- EXAMINE
rem 1070 if ob=30 then f(18)=0:m$="SOMETHING HERE!"
rem 1080 if ob=31 then m$="THAT'S DISGUSTING!"
rem 1090 if(ob=28 or ob=29) then m$="THERE'S A DRAWER..."
rem 1100 if ob=33 or ob=5 then gosub 1140
rem 1110 if rm=43 and ob=35 then m$="THERE IS SOMETHING BEYOND..."
rem 1120 if ob=32 then gosub 1030
rem 1130 return
rem 
rem !- READ
rem 1140 if rm=42 and ob=33 then m$="THEY ARE DEMONIC WORKS"
rem 1150 if(ob=3orob=36)andc(3)=1andf(34)=0tHm$="USE THIS WORD WITH CARE 'XZANFAR'"
rem 1160 ifc(5)=1 and ob=5 then m$="THE SCRIPT IS IN AN ALIEN TONGUE"
rem 1170 return
rem 
rem !- SAY
rem 1180 m$="OK '" + w$ +"'"
rem 1190 ifc(3)=1andob=34tHm$="*MAGIC OCCURS*":ifrm<>45thenrm=int(rnd(63)*63)+1
rem 1200 if c(3)=1 and ob=34 and rm=45 then f(34) = 1
rem 1210 return
rem 
rem !- DIG
rem 1220 if c(12)=1 then m$="YOU MADE A HOLE"
rem 1230 ifc(12)=1aNrm=30tHm$="DUG BARS OUT":descriptions$(rm)="HOLE IN A WALL":r$(rm)="NSE"
rem 1240 return
rem 
rem !- SWING
rem 1250 if c(14)<>1 and rm=7 then m$="THIS IS NO TIME TO PLAY GAMES"
rem 1260 if ob=14 and c(14)=1 then m$="YOU SWUNG IT"
rem 1270 if ob=13 and c(13)=1 then m$"WHOOSH!"
rem 1280 if ob<>13 or c(13)<>1 or rm<>43 then return
rem 1285 r$(rm)="WN":descriptions$(rm)="STUDY WITH SECRET ROOM":m$="YOU BROKE THE THIN WALL"
rem 1290 return
rem 
rem !- CLIMB
rem 1300 if ob<>14 then return
rem 1305 if c(14)=1 then m$="IT ISN'T ATTACHED TO ANYTHING!"
rem 1308 if rm<>7 then return
rem 1310 ifc(14)<>1aNf(14)=0tHm$="YOU SEE FOREST AND CLIFF SOUTH":f(14)=1:return
rem 1320 if c(14)<>1 and f(14)=1 then m$="GOING DOWN!":f(14)=0
rem 1330 return
rem 
rem !- LIGHT
rem 1340 if ob<>17 or c(17)<>1 then return
rem 1345 if c(8)=0 then m$="IT WILL BURN YOUR HANDS"
rem 1350 if c(9)=0 then m$="NOTHING TO LIGHT IT WITH"
rem 1360 if c(9)=1 and c(8)=1 then m$="IT CASTS A FLICKERING LIGHT":f(0)-1
rem 1370 return
rem 
rem !- UNLIGHT
rem 1380 if f(0)=1 then f(0)=0:m$="EXTINGUISHED"
rem 1390 return
rem 
rem !- SPRAY
rem 1400 if ob=26 and c(16)=1 then m$="HISSSS"
rem 1410 if ob=26 and c(16)=1 and f(26)=1 then f(26)=0:m$="PFFT! GOT 'EM"
rem 1420 return
rem 
rem !- USE
rem 1430 if ob=10 and c(10)=1 and c(11)=1 then m$="SWITCHED ON":f(24)=1
rem 1440 if f(27)=1 and f(24)=1 then m$="WHIZZ-VACUUMED UP THE GHOSTS!":f(27)=0
rem 1450 return
rem 
rem !- UNLOCK
rem 1460 if rm=43 and (ob=27 or ob=28) then gosub 1030
rem 1470 if rm<>28 or ob<>25 or f(25)<>0 then return
rem 1475 ifc(18)=1tHf(25)=1:r$(rm)="SEW":descriptions$(rm)="HUGE OPEN DOOR":m$="THE KEY TURNS!"
rem 1480 return
rem 
rem !- LEAVE
rem 1490 if c(ob)=1 then c(ob)=0:l(ob)=rm:m$="DONE"
rem 1500 return
rem 
rem !- SCORE
rem 1510 s=0
rem 1520 for i = 1 to g
rem 1530 if c(i)=1 then s = s + 1
rem 1540 next i
rem 1550 if s<>17 then ?"YOU HAVE MORE OBJECTS TO FIND...":goto 1580
rem 1555 ifc(15)<>1aNrm<>57tH?"EVERYTHING FOUND!":?"RETURN TO GATE FOR FINAL SCORE"
rem 1560 ifrm=57tH?"DOUBLE SCORE FOR REACHING HERE!":s=s*2
rem 1570 ?"YOUR SCORE = ";s:if s>18 then ? "WELL DONE! YOU FINISHED THE GAME":END
rem 1580 input "PRESS RETURN TO CONINUE...";q$
rem 1590 return
rem 
rem TODO find gaps in the verbs to add QUIT
rem TODO QUIT should ask for option to start again or reset
rem TODO SCORE should give progress score
rem TODO add instructions and back story
rem TODO add sound effects and maybe a sprite or 4 for some events
rem TODO add RAM command to check FRE(0) 
rem TODO add a command to switch timing in and out
rem 
rem #endregion
rem 

end

initialise:

rem =============================================================================
rem r$: location descriptions
rem descriptions$: location exits
rem o$: nouns (objects)
rem v$: verbs
rem c(w): the player inventory array
rem l??????
rem f(w): object flag array, with 1 flag for each object
rem    v = 25
rem    w = 36
rem    g = 18
rem =============================================================================
  
  a$ = "hello yoyo!"
  print a$

  data l![] = 46,38,35,50,13,18,28,42,10,25,26,4,2,7,47,60,43,32

  data verb$[] = "help","carrying?","go","n","s","w","e","u","d","get","take","open","examine","read","say", ~
                  "dig","swing","climb","light","unlight","spray","use","unlock","leave","score"

  data roomexits$[] = "se","we","we","swe","we","we","swe","ws"~
                    ,"ns","se","we","nw","se","w","ne","nsw"~
                    ,"ns","ns","se","we","nwud","se","wsud","ns"~
                    ,"n","ns","nse","we","we","nsw","ns","ns"~
                    ,"s","nse","nsw","s","nsud","n","n","ns"~
                    ,"ne","nw","ne","w","nse","we","w","ns"~
                    ,"se","nsw","e","we","nw","s","sw","nw"~
                    ,"ne","nwe","we","we","we","nwe","nwe","w"

  data descriptions$[] = "dark corner","overgrown garden","by large woodpile","yard by rubbish"~
      ,"weedpatch","forest","thick forest","blasted tree"~
      ,"corner of house","entrance to kitchen","kitchen & grimy cooker"~
      ,"scullery door"~
      ,"room with inches of dust","rear turret room","clearing by house","path"~
      ,"side if house","back of hallway","dark alcove","small dark room"~
      ,"bottom of spiral staircase","wide passage","slippery steps","clifftop"~
      ,"near crumbling wall","gloomy passage","pool of light"~
      ,"impressive vaulted hallway"~
      ,"hall by thick wooden door","ttrophy room","cellar with barred window"~
      ,"cliff path"~
      ,"cupboard with ahnging coat","front hall","sitting room","secret room"~
      ,"steep marble stairs","dining room","deep cellar with coffin","cliff path"~
      ,"closet","front lobby","library of evil books"~
      ,"study with desk & hole in wall"~
      ,"weird cobwebby room","very old chamber","spooky room","cliff path by marsh"~
      ,"rubble strewn verandah","front porch","front tower","sloping corridor"~
      ,"upper gallery","marsh by wall","marsh","soggy path"~
      ,"twisted railing","path through iron gate","by railings","beneath front tower"~
      ,"debris from crumbling facade","large fallen brickwork"~
      ,"rotting stone arch","crumbling clifftop"

  data object$[] = "painting","ring","magic spells","goblet","scroll","coins","status","candlestick"~
                  ,"matches","vacuum","batteries","shovel","axe","rope","boat","aerosol","candle","key"~
                  ,"north","south","east","west","up","down"~
                  ,"door","bats","ghosts","drawer","desk","coat","rubbish"~
                  ,"coffin","books","xzanfar","wall","spells"

  return
